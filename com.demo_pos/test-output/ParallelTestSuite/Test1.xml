<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-TD3KLSF" failures="0" tests="7" name="Test1" time="19.939" errors="0" timestamp="2025-07-16T15:05:30 IST">
  <testcase classname="baseclass.BaseClass" name="@AfterMethod afterMethod" time="0.021">
    <failure type="org.openqa.selenium.WebDriverException" message="java.io.IOException: Output closed
Build info: version: &amp;apos;4.28.1&amp;apos;, revision: &amp;apos;73f5ad48a2&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;21.0.6&amp;apos;
Driver info: driver.version: ChromiumDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: java.io.IOException: Output closed
Build info: version: '4.28.1', revision: '73f5ad48a2'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: driver.version: ChromiumDriver
at org.openqa.selenium.remote.http.jdk.JdkHttpClient$4.send(JdkHttpClient.java:322)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient$4.close(JdkHttpClient.java:341)
at org.openqa.selenium.devtools.Connection.close(Connection.java:226)
at org.openqa.selenium.devtools.DevTools.close(DevTools.java:61)
at java.base/java.util.Optional.ifPresent(Optional.java:178)
at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:439)
at org.openqa.selenium.chromium.ChromiumDriver.quit(ChromiumDriver.java:436)
at baseclass.BaseClass.afterMethod(BaseClass.java:57)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException: Output closed
at java.net.http/jdk.internal.net.http.websocket.WebSocketImpl.sendClose(WebSocketImpl.java:313)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient$4.lambda$send$2(JdkHttpClient.java:287)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient$4.send(JdkHttpClient.java:312)
... 32 more
... Removed 20 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="baseclass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="baseclass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="baseclass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="baseclass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="baseclass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="baseclass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="baseclass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="baseclass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="baseclass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="baseclass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="baseclass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="baseclass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testclasses.LoginPageTest" name="verifyLogoDisplayed" time="0.258"/>
  <testcase classname="testclasses.LoginPageTest" name="verifyTitleofthePage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTitleofthePage -->
  <testcase classname="testclasses.LoginPageTest" name="verifyIstheremembermecheckboxenaled" time="0.0">
    <skipped/>
  </testcase> <!-- verifyIstheremembermecheckboxenaled -->
  <testcase classname="testclasses.LoginPageTest" name="verifySuccessfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifySuccessfulLogin -->
  <testcase classname="testclasses.LoginPageTest" name="verifyUnsuccessfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfulLogin -->
  <testcase classname="testclasses.LoginPageTest" name="verifyUnsuccessfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfulLogin -->
  <testcase classname="testclasses.LoginPageTest" name="verifyUnsuccessfulLogin" time="0.001">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfulLogin -->
</testsuite> <!-- Test1 -->
